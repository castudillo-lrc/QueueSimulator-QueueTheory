{"version":3,"sources":["animations.js"],"names":[],"mappings":"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","file":"animations.js","sourcesContent":["\n/**\nAn array of servers, set the state of the servers to 0,  0 == aviable, 1== occupy \n@global\n */ \nvar arrServers = [0,0,0,0];\n/**\nSet the inital id of the clients that are created in the animation.\n@global\n */ \nvar id = 1;\n/**\nSet the position  of the clients that are created in the animation.\n@global\n */ \nvar pos=0;\n/**\nSet the quantity  of the clients that are waiting in line.\n@global\n */ \nvar quantity=0;\n/**\nSet a queue for calculations of priorities of the clients.\n@global\n */ \nvar queue = [];\n/**\nGrabs the value of lambda entered by user. \n@global\n */ \nvar lambda = $(\"#lambdaid\").val();\n/**\nGrabs the value of mui entered by user. \n@global\n */ \nvar miu = $(\"#muiid\").val();\n/**\nSets the exponential distribution for the servers. \n@global\n */ \nvar exponential = [];\n\n/**\nSets in the view the number of clients that are waiting in the queue\n@global\n */ \n$(\"#queueSize\").text(quantity);\n\n/**\nSets the number of lapses that the system will have, by default it will be 24, simulating a day\n@global\n */ \nvar lapses = []\n/**\nInitialize the correct distribution for servers and arrivings\n@param {number} laps, the number of lapses that the simulation will have\n@global\n */ \nfunction setLapses (laps) {\n\t\n\tvar r = new Rands();\n\tconsole.log($(\"#lambdaid\").val() +\" + \" + $(\"#muiid\").val());\n\tlambda = $(\"#lambdaid\").val() ;\n\tmiu = $(\"#muiid\").val();\n\tlapses = r.poisson(lambda,[laps]);\n\texponential = r.exponential(miu*500, [1000])\n\tfor (var i = 0; i < lapses.length; i++) {\n\t\tif(lapses[i] ==0){\n\t\t\tlapses[i] = 1;\n\t\t}\n\t\t\n\t};\n\t//console.log(lapses);\n}\n\n\n/**\nInitialize rate of arriving of clients to de system\n@global\n */ \nfunction sendClients(){\n\tsetInterval(function myVar(){\n\n\t\t\n\t\t//console.log(quantity);\n\t\tfor (var i = 0; i < lapses[pos]; i++) {\n\t\t(function  (ins) {\t\n\t\t\tsetTimeout(function  () {\n\t\t\t\t$( \"#fila\" ).append( '<div id=\"example-'+id+'\" class=\"circle small\"></div>');\n\t\t\t\tmoveClient(\"#example-\"+id,0, 200);\n\t\t\t\tmoveClient(\"#example-\"+id,350, 200);\n\t\t\t\tqueue.push(\"#example-\"+id);\n\t\t\t\tquantity += 1;\n\t\t\t\t$(\"#queueSize\").text(quantity);\n\t\t\t\tid++;\n\t\t\t},5000/ins)\n\t\t})(i);\n\t\t};\n\t\tpos += 1;\n\t}, 5000)\n}\n\n/**\nSets the correct path for the animation when the client goes to the first server\n@param {number} idS, position in the x axis of the server\n@global\n */ \nfunction path1(idS){\n\t//quantity -=1;\n\tmoveClient(idS,575, 40);\n\tarrServers[0]=1;\n\tereaseClient(idS, 0, 40);\n}\n/**\nSets the correct path for the animation when the client goes to the second server\n@param {number} idS, position in the x axis of the server\n@global\n */ \nfunction path2(idS){\n\t//quantity -=1;\n\tmoveClient(idS,575, 145);\n\tarrServers[1]=1;\n\tereaseClient(idS, 1, 145);\n}\n/**\nSets the correct path for the animation when the client goes to the third server\n@param {number} idS, position in the x axis of the server\n@global\n */ \nfunction path3(idS){\n\t//quantity -=1;\n\tmoveClient(idS,575, 250);\n\tarrServers[2]=1;\n\tereaseClient(idS, 2, 250);\n}\n/**\nSets the correct path for the animation when the client goes to the fourth server\n@param {number} idS, position in the x axis of the server\n@global\n */ \nfunction path4(idS){\n\t//quantity -=1;\n\tmoveClient(idS,575, 350);\n\tarrServers[3]=1;\n\tereaseClient(idS, 3, 350);\n}\n/**\nErease the client that has compleated a path from the animation\n@param {number} idS, id of the client\n@param {number} position, id of the server in the array \"arrServers\"\n@param {number} y, position in the y axis of the client\n@global\n */ \nfunction ereaseClient(ids, position, y){\n\tquantity-=1;\n\t$(\"#queueSize\").text(quantity);\n\tsetTimeout(function  () {\n\t\t\n\t\tmoveClient(ids,600, y);\n\t\t\t\tconsole.log(\"borrando \"+ids);\n\t\t\t\t$( ids ).remove();\n\t\t\t\tarrServers[position]=0;\n\t\t\t\t//console.log(arrServers[position]);\n\t\t\t\t\n\t\t\t\tconsole.log(\"borrado \"+exponential.shift());\n\t\t\t\t;\n\t\t\t}, (1/exponential.shift())+5000)\n\n}\n\n/**\nFunction to provide feedback of the clients created in the animation\n@global\n */ \n\nfunction printClients(){\n\tsetInterval(function myVar(){\n\t\tconsole.log(quantity);\n\t\t//console.log(queue.shift());\n\t\tvar random = Math.random();\n\t\t//console.log(arrServers);\n\t\tif($.inArray(0,arrServers) != -1){\n\n\t\t\tif(queue[0] !== 'undefined'){\n\t\t\t\ttry{\n\t\t\t\t\t//console.log(\"moviendo al servidor\");\n\t\t\t\t\tif(arrServers[0]==0 && random < 1/4){\n\t\t\t\t\t\tpath1(queue.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse if(arrServers[1]==0 && random >= 1/4 && random < 2/4){\n\t\t\t\t\t\tpath2(queue.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse if(arrServers[2]==0 && random >= 2/4 && random < 3/4){\n\t\t\t\t\t\tpath3(queue.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse if(arrServers[3]==0 && random >= 3/4 && random < 4/4){\n\t\t\t\t\t\tpath4(queue.shift());\t\n\t\t\t\t\t}\n\t\t\t\t}catch(err){\n\t\t\t\t\t//console.log(\"there is no people in the queue\");\n\t\t\t\t}\n\t\t\t\t//console.log(\"funciona\");\n\t\t\t}\n\t\t}\n\t}, 100)\n}\n\n/**\nInitialize all the functions to run the animation by pressing the button with id \"playButton\"\n@global\n */ \ndocument.getElementById('playButton').onclick = function (){\n\tinit();\n}\n\n/**\nMove a client in the animation\n@param {number} id, id of the client\n@param {number} x, wanted position in the x axis of the client\n@param {number} y, wanted position in the y axis of the client\n@global\n */ \nfunction moveClient(id, x, y){\n\tmove(id)\n    .to(x, y)\n    .duration('2s')\n    .end();\n}\n\n\n\n\n/**\ninitialize the animation\n@global\n */ \nfunction init() {\n\tconsole.log(\"initiating simulation\");\n\tsetLapses(24);\n\tsendClients();\n\tprintClients();\n}\n\n\n\n/**\nIt doesn't allow the user to run the animation if the values for Lambda and Mui are not set\n@global\n */ \n$(\"#lambdaid\").on(\"input\", function() {\n    if(this.value){\n    \t$(\"#muiid\").on(\"input\", function() {\n\t\t    if(this.value){\n\t\t    \t$( \"#playButton\" ).prop( \"disabled\", false );\n\t\t    }\n});\n    }\n});"],"sourceRoot":"/source/"}